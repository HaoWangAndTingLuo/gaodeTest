#---- global logging configuration
#---- level: FATAL,ERROR,WARN,INFO,DEBUG
#---- appender: console, file, mail
### set log levels ###
log4j.rootLogger = DEBUG,console

### \u8F93\u51FA\u5230\u63A7\u5236\u53F0 ###
###---日志输出目的地，ConsoleAppender（控制台），FileAppender（文件），DailyRollingFileAppender（每天产生一个日志文件），.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），WriterAppender（将日志信息以流格式发送到任意指定的地方）
log4j.appender.console = org.apache.log4j.ConsoleAppender
log4j.appender.console.Target = System.out
###---Layout：日志输出格式，HTMLLayout（以HTML表格形式布局）， PatternLayout（可以灵活地指定布局模式），（包含日志信息的级别和信息字符串），TTCCLayout（包含日志产生的时间、线程、类别等等信息）
log4j.appender.console.layout = org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern =  %d{ABSOLUTE} %5p %c{1}:%L - %m%n

### \u8F93\u51FA\u5230\u65E5\u5FD7\u6587\u4EF6 ###
log4j.appender.file = org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.File = ${uplat.root}/WEB-INF/logs/platform.log
log4j.appender.file.DatePattern=_yyyyMMdd'.log'
#log4j.appender.file.Append = true
#log4j.appender.file.Threshold = INFO
log4j.appender.file.layout = org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern =%-d{yyyy-MM-dd HH\:mm\:ss}  [ %t\:%r ] - [ %p ]  %m%n

### \u6253\u5370SQL ###
#log4j.logger.com.ibatis=DEBUG
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG
#log4j.logger.java.sql.ResultSet=DEBUG